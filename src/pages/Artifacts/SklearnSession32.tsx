import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Button } from '@/components/ui/button';
import { Copy, Check, Play, Pause, ArrowLeft, Home, BarChart3 } from 'lucide-react';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism';

const SklearnSession32 = () => {
  const navigate = useNavigate();
  const [copiedCode, setCopiedCode] = useState<string | null>(null);
  const [currentStory, setCurrentStory] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);

  // Story chapters about Real Estate ML
  const storyChapters = [
    {
      title: "Capitolul 1: √éntrebarea Care CostƒÉ Sute De Mii",
      content: `Bucure»ôti, 2024. Ai economisit timp de 5 ani. 80.000‚Ç¨ √Æn cont. E»ôti gata sƒÉ cumperi primul tƒÉu apartament.

Agent imobiliar: "Acest apartament costƒÉ 120.000‚Ç¨. E o ofertƒÉ excelentƒÉ!"

Tu te g√¢nde»ôti: "Dar chiar ESTE o ofertƒÉ bunƒÉ? Sau este supraevaluat? Cum »ôtiu?"

√éncepi sƒÉ cau»õi compara»õii:
- Acela»ôi cartier, 3 camere, etaj 2: 115.000‚Ç¨
- Cartier vecin, 3 camere, etaj 5: 105.000‚Ç¨
- Acela»ôi bloc, etaj diferit: 130.000‚Ç¨

Dar sunt AT√ÇT de multe variabile: zona, etajul, mp, anul construc»õiei, balcon, parcare...

Cum le pui pe toate √ÆmpreunƒÉ? Cum »òTII cƒÉ faci alegerea corectƒÉ?

Aceasta este problema care a dus la na»ôterea Real Estate Price Prediction cu Machine Learning.`,
      icon: "üè†",
      gradient: "from-blue-500 to-indigo-500"
    },
    {
      title: "Capitolul 2: Datele LipsƒÉ - Realitatea Din Teren",
      content: `√éncepi sƒÉ colectezi date de pe OLX, Imobiliare.ro, Storia. 500 de apartamente. Euforic, deschizi Excel-ul.

Apoi vezi:
- Apartament 1: zona "Floreasca", camere: 3, mp: ?, an: 2010
- Apartament 2: zona ?, camere: 2, mp: 65, an: ?
- Apartament 3: zona "Pipera", camere: 3, mp: 80, balcon: ?

Datele sunt INCOMPLETE. Welcome to real world!

√én Session 30, datele erau perfecte. √én Session 31, Breast Cancer dataset-ul era curat.

Dar √Æn lumea realƒÉ? 30-40% din date au valori lipsƒÉ.

Anun»õurile sunt incomplete. Proprietarii nu completeazƒÉ tot. Unii blocheazƒÉ informa»õii strategic.

√éntrebare: Arunci acele r√¢nduri? WRONG! Ai pierde 40% din informa»õie!

Solu»õia: SimpleImputer - completeazƒÉ strategic valorile lipsƒÉ.
- Features numerice ‚Üí completeaza cu media
- Features categorice ‚Üí completeazƒÉ cu cel mai frecvent

Acesta este primul pas spre un model de ML profesionist.`,
      icon: "‚ùì",
      gradient: "from-yellow-500 to-orange-500"
    },
    {
      title: "Capitolul 3: Mixul Features - Numere »òI Categorii",
      content: `Dataset-ul tƒÉu are:

Numerical features:
- suprafata: 45, 67, 82 (mp)
- etaj: 1, 3, 7
- an_constructie: 1985, 2010, 2021

Categorical features:
- zona: "Floreasca", "Pipera", "Militari"
- balcon: "da", "nu"
- parcare: "da", "nu"

Problema: Modelul de ML lucreazƒÉ DOAR cu numere. Cum transformi "Floreasca" √Æn numƒÉr?

OneHotEncoder salveazƒÉ ziua:
- zona_Floreasca: 1 sau 0
- zona_Pipera: 1 sau 0
- zona_Militari: 1 sau 0

Dar aici vine complexitatea:
- Features numerice ‚Üí SimpleImputer(mean) ‚Üí StandardScaler
- Features categorice ‚Üí SimpleImputer(most_frequent) ‚Üí OneHotEncoder

Cum le aplici pe AMBELE √Æn acela»ôi timp, CORECT, fƒÉrƒÉ data leakage?

ColumnTransformer! Una dintre cele mai puternice tool-uri din sklearn.

Define»ôti transformƒÉri diferite pentru coloane diferite. Sklearn aplicƒÉ corect, √Æn ordine, fƒÉrƒÉ gre»ôeli.`,
      icon: "üîÄ",
      gradient: "from-purple-500 to-pink-500"
    },
    {
      title: "Capitolul 4: Trei Modele, Trei Perspective",
      content: `Acum ai datele curate. Pipeline-ul gata. E timpul sƒÉ construie»ôti modelul.

Dar CARE model?

Linear Regression spune: "Rela»õia e simplƒÉ, liniarƒÉ. AdunƒÉ coefficients, get price."
- Rapid, interpretabil
- Func»õioneazƒÉ c√¢nd rela»õiile sunt aproximativ liniare
- Baseline perfect

Ridge Regression spune: "LasƒÉ-mƒÉ sƒÉ adaug regularizare. Prevent overfitting."
- L2 penalty pentru coefficien»õi mari
- GridSearchCV gƒÉse»ôte alpha optimal
- Mai robust dec√¢t Linear simplu

Random Forest spune: "LƒÉsa»õi-mƒÉ sƒÉ vƒÉd toate pattern-urile non-lineare."
- 100 de arbori voteazƒÉ √ÆmpreunƒÉ
- CaptureazƒÉ rela»õii complexe
- Feature importance gratis

Compari toate 3. Vezi care performeazƒÉ cel mai bine.

Nu existƒÉ "modelul perfect" - existƒÉ modelul POTRIVIT pentru datele tale.

Acesta este g√¢ndirea unui ML Engineer profesionist.`,
      icon: "‚öñÔ∏è",
      gradient: "from-green-500 to-teal-500"
    },
    {
      title: "Capitolul 5: Vizualizarea - AdevƒÉrul Din Grafice",
      content: `Modelul zice: "R¬≤ Score = 0.87". Sounds good?

DAR ce √ÆnseamnƒÉ asta √Æn PRACTICƒÇ?

Prediction vs Actual plot:
- X-axis: Pre»õul real al apartamentului
- Y-axis: Pre»õul prezis de model
- Linie perfectƒÉ y=x: unde ar trebui sƒÉ fie toate punctele

Interpretare:
- Punct pe linie ‚Üí predic»õie perfectƒÉ
- Punct deasupra ‚Üí model supraevalueazƒÉ (crezi cƒÉ e mai scump)
- Punct dedesubt ‚Üí model subevalueazƒÉ (crezi cƒÉ e mai ieftin)

Residuals plot:
- Diferen»õa: predicted - actual
- Distribu»õie normalƒÉ centratƒÉ pe 0 = GOOD
- Skewed = model are bias
- Heavy tails = outlieri care confundƒÉ modelul

Acestea NU sunt "graphs fancy". Sunt INSTRUMENTE de diagnostic.

Ei √Æ»õi spun UNDE modelul gre»ôe»ôte »ôi DE CE.

Cu ele, transformi ML din "black box" √Æn "understood system".

»òi atunci, po»õi face o decizie informatƒÉ: "Apartamentul de 120.000‚Ç¨? Modelul meu zice cƒÉ ar trebui sƒÉ fie 110.000‚Ç¨. Negociez!"`,
      icon: "üìä",
      gradient: "from-red-500 to-orange-500"
    }
  ];

  useEffect(() => {
    let interval: NodeJS.Timeout;
    if (isPlaying && currentStory < storyChapters.length - 1) {
      interval = setInterval(() => {
        setCurrentStory(prev => Math.min(prev + 1, storyChapters.length - 1));
      }, 3500);
    } else if (currentStory >= storyChapters.length - 1) {
      setIsPlaying(false);
    }
    return () => clearInterval(interval);
  }, [isPlaying, currentStory]);

  const copyToClipboard = (code: string, id: string) => {
    navigator.clipboard.writeText(code);
    setCopiedCode(id);
    setTimeout(() => setCopiedCode(null), 2000);
  };

  const CodeBlock = ({ code, id, title }: { code: string; id: string; title?: string }) => (
    <div className="relative group">
      {title && (
        <div className="bg-gradient-to-r from-blue-600 to-indigo-600 text-white px-4 py-2 rounded-t-lg font-semibold text-sm">
          {title}
        </div>
      )}
      <div className="relative">
        <Button
          onClick={() => copyToClipboard(code, id)}
          className="absolute top-2 right-2 z-10 bg-gray-800/80 hover:bg-gray-700/80 opacity-0 group-hover:opacity-100 transition-opacity"
          size="sm"
          variant="secondary"
        >
          {copiedCode === id ? (
            <span className="text-green-400 text-xs flex items-center gap-1">
              <Check className="h-4 w-4" /> Copied!
            </span>
          ) : (
            <Copy className="h-4 w-4 text-gray-300" />
          )}
        </Button>
        <div className={`rounded-lg overflow-hidden border border-gray-700 ${title ? 'rounded-t-none' : ''}`}>
          <SyntaxHighlighter
            language="python"
            style={vscDarkPlus}
            customStyle={{
              margin: 0,
              padding: '1.5rem',
              fontSize: '0.875rem',
              maxHeight: '32rem',
              borderRadius: title ? '0 0 0.5rem 0.5rem' : '0.5rem',
            }}
            showLineNumbers={true}
            lineNumberStyle={{
              minWidth: '3em',
              paddingRight: '1em',
              color: '#6e7681',
              userSelect: 'none',
            }}
          >
            {code}
          </SyntaxHighlighter>
        </div>
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/30 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
      {/* Header Navigation */}
      <div className="border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <Button
                variant="ghost"
                size="sm"
                onClick={() => navigate('/machine-learning')}
                className="flex items-center gap-2"
              >
                <ArrowLeft className="w-4 h-4" />
                Back to Course
              </Button>
              <div className="w-px h-6 bg-border" />
              <div>
                <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                  Proiect Regression Avansat - Pre»õuri Imobiliare
                </h1>
                <p className="text-sm text-muted-foreground">Session 32: Advanced Real Estate Price Prediction</p>
              </div>
            </div>
            <div className="flex items-center gap-3">
              <Badge variant="secondary" className="bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200">
                <Home className="w-3 h-3 mr-1" />
                Real Estate
              </Badge>
              <Badge variant="secondary" className="bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200">
                <BarChart3 className="w-3 h-3 mr-1" />
                Regression
              </Badge>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-6xl mx-auto px-4 py-12">

        {/* Header */}
        <div className="text-center mb-12">
          <div className="inline-block mb-4">
            <Badge className="bg-gradient-to-r from-blue-500 to-indigo-500 text-white px-6 py-2 text-lg">
              Session 32
            </Badge>
          </div>
          <h1 className="text-5xl font-bold mb-4 bg-gradient-to-r from-blue-600 via-indigo-600 to-purple-600 bg-clip-text text-transparent">
            Proiect Regression Avansat - Pre»õuri Imobiliare
          </h1>
          <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
            De la "Ar trebui sƒÉ cumpƒÉr acest apartament?" la construirea unui sistem complet de predic»õie ML
          </p>
        </div>

        {/* Origin Story - Collapsible */}
        <details open className="mb-12">
          <summary className="cursor-pointer list-none">
            <Card className="p-8 bg-white/90 dark:bg-gray-800/90 backdrop-blur border-2 border-blue-200 dark:border-blue-700 shadow-2xl hover:shadow-xl transition-shadow">
              <div className="flex items-center justify-between">
                <h2 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                  üìñ Povestea Real Estate ML
                </h2>
                <div className="flex items-center gap-3">
                  <Button
                    onClick={(e) => {
                      e.preventDefault();
                      setIsPlaying(!isPlaying);
                    }}
                    className="bg-gradient-to-r from-blue-500 to-indigo-500 hover:from-blue-600 hover:to-indigo-600"
                  >
                    {isPlaying ? <Pause className="h-5 w-5 mr-2" /> : <Play className="h-5 w-5 mr-2" />}
                    {isPlaying ? 'PauzƒÉ' : 'Redare Auto'}
                  </Button>
                  <span className="text-sm text-gray-500 dark:text-gray-400">(Click to collapse/expand)</span>
                </div>
              </div>
            </Card>
          </summary>

          <Card className="mt-4 p-8 bg-white/90 dark:bg-gray-800/90 backdrop-blur border-2 border-blue-200 dark:border-blue-700">
            <div className="space-y-4">
            {storyChapters.map((chapter, index) => (
              <div
                key={index}
                className={`p-6 rounded-lg border-2 transition-all duration-500 cursor-pointer ${
                  currentStory === index
                    ? 'border-blue-400 bg-blue-50/50 dark:bg-blue-900/10 shadow-lg scale-[1.02]'
                    : 'border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800/50 hover:border-blue-300 hover:bg-blue-50/30'
                }`}
                onClick={() => setCurrentStory(index)}
              >
                <div className="flex items-start gap-4">
                  <span className="text-4xl">{chapter.icon}</span>
                  <div className="flex-1">
                    <h3 className="text-xl font-bold mb-2 text-gray-900 dark:text-gray-100">
                      {chapter.title}
                    </h3>
                    {currentStory === index && (
                      <p className="text-gray-800 dark:text-gray-200 whitespace-pre-line leading-relaxed">
                        {chapter.content}
                      </p>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>

            <div className="flex gap-2 mt-6 justify-center">
              {storyChapters.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentStory(index)}
                  className={`h-2 rounded-full transition-all duration-300 ${
                    currentStory === index ? 'w-12 bg-blue-500' : 'w-2 bg-gray-300'
                  }`}
                />
              ))}
            </div>
          </Card>
        </details>

        {/* Main Content - Will continue in next message due to length */}
        <Tabs defaultValue="part1" className="space-y-8">
          <TabsList className="grid grid-cols-4 gap-4 bg-transparent h-auto p-0">
            <TabsTrigger
              value="part1"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-blue-500 data-[state=active]:to-indigo-500 data-[state=active]:text-white py-3 rounded-lg border-2 border-blue-200"
            >
              <span className="mr-2">üìä</span>
              Partea 1: Date & Explorare
            </TabsTrigger>
            <TabsTrigger
              value="part2"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-purple-500 data-[state=active]:to-pink-500 data-[state=active]:text-white py-3 rounded-lg border-2 border-purple-200"
            >
              <span className="mr-2">üîß</span>
              Partea 2: Pipeline Complex
            </TabsTrigger>
            <TabsTrigger
              value="part3"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-green-500 data-[state=active]:to-teal-500 data-[state=active]:text-white py-3 rounded-lg border-2 border-green-200"
            >
              <span className="mr-2">ü§ñ</span>
              Partea 3: Trei Modele
            </TabsTrigger>
            <TabsTrigger
              value="part4"
              className="data-[state=active]:bg-gradient-to-r data-[state=active]:from-orange-500 data-[state=active]:to-red-500 data-[state=active]:text-white py-3 rounded-lg border-2 border-orange-200"
            >
              <span className="mr-2">üìà</span>
              Partea 4: VizualizƒÉri
            </TabsTrigger>
          </TabsList>

          {/* Part 1: Data Exploration */}
          <TabsContent value="part1">
            <Card className="p-8 bg-white/95 dark:bg-gray-800/95 backdrop-blur border-2 border-blue-200 dark:border-blue-700">
              <h2 className="text-3xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent">
                üìä Partea 1: Date Realiste & Explorare
              </h2>

              <div className="prose dark:prose-invert max-w-none mb-8">
                <div className="bg-white/60 dark:bg-gray-800/60 rounded-lg p-6 mb-6">
                  <h3 className="text-2xl font-bold mb-4 text-blue-700 dark:text-blue-300">
                    üè† Dataset-ul Real Estate Rom√¢nesc
                  </h3>
                  <p className="text-lg mb-4">
                    Spre deosebire de Session 30 »ôi 31 (unde dataset-urile erau curate), √Æn lumea realƒÉ datele sunt MESSY:
                  </p>
                  <ul className="space-y-2">
                    <li><strong>Valori lipsƒÉ</strong> - 30-40% din anun»õuri au informa»õii incomplete</li>
                    <li><strong>Mix de tipuri</strong> - Numerical (mp, etaj) + Categorical (zona, balcon)</li>
                    <li><strong>Outlieri</strong> - Penthouse-uri de lux distorsioneazƒÉ media</li>
                    <li><strong>Inconsisten»õe</strong> - "Floreasca" vs "floreasca" vs "FLOREASCA"</li>
                  </ul>
                </div>

                <div className="bg-gradient-to-r from-blue-100 to-indigo-100 dark:from-blue-900/30 dark:to-indigo-900/30 rounded-lg p-6">
                  <h4 className="text-xl font-semibold mb-3 text-blue-800 dark:text-blue-200">
                    üí° De Ce Este Diferit?
                  </h4>
                  <div className="grid md:grid-cols-3 gap-4 text-sm">
                    <div>
                      <p className="font-semibold text-blue-700 dark:text-blue-300 mb-2">Session 30:</p>
                      <p>Date simple, curate, regression de bazƒÉ</p>
                    </div>
                    <div>
                      <p className="font-semibold text-purple-700 dark:text-purple-300 mb-2">Session 31:</p>
                      <p>Dataset medical curat, classification avansatƒÉ</p>
                    </div>
                    <div>
                      <p className="font-semibold text-indigo-700 dark:text-indigo-300 mb-2">Session 32:</p>
                      <p>Date messy, preprocessing complex, end-to-end</p>
                    </div>
                  </div>
                </div>
              </div>

              <Tabs defaultValue="code" className="mt-6">
                <TabsList className="grid grid-cols-3 w-full">
                  <TabsTrigger value="code">üíª Cod Complet</TabsTrigger>
                  <TabsTrigger value="real">üè† Aplica»õie RealƒÉ</TabsTrigger>
                  <TabsTrigger value="practice">‚úçÔ∏è Exerci»õiu</TabsTrigger>
                </TabsList>

                <TabsContent value="code" className="mt-6">
                  <CodeBlock
                    id="data-exploration"
                    title="Crearea »ôi Explorarea Dataset-ului Real Estate"
                    code={`import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split

# ========================================
# PARTEA 1: CREAREA DATASET-ULUI REALIST
# ========================================

# CreƒÉm un dataset care simuleazƒÉ datele de pe OLX/Imobiliare.ro
np.random.seed(42)
n_samples = 500

# Zone din Bucure»ôti cu pre»õuri diferite
zone = ['Floreasca', 'Pipera', 'Militari', 'Drumul Taberei', 'Titan',
        'Vitan', 'Berceni', 'Pantelimon']
zone_prices = {
    'Floreasca': 2000, 'Pipera': 1900, 'Militari': 1200,
    'Drumul Taberei': 1300, 'Titan': 1100, 'Vitan': 1150,
    'Berceni': 900, 'Pantelimon': 950
}

data = {
    'zona': np.random.choice(zone, n_samples),
    'suprafata': np.random.randint(35, 120, n_samples),
    'numar_camere': np.random.randint(1, 5, n_samples),
    'etaj': np.random.randint(0, 11, n_samples),
    'an_constructie': np.random.randint(1970, 2024, n_samples),
    'balcon': np.random.choice(['da', 'nu'], n_samples),
    'parcare': np.random.choice(['da', 'nu'], n_samples)
}

df = pd.DataFrame(data)

# CalculƒÉm pre»õul bazat pe features (cu varia»õie realistƒÉ)
df['pret'] = df.apply(lambda row:
    zone_prices[row['zona']] * row['suprafata'] +
    row['numar_camere'] * 5000 +
    (2024 - row['an_constructie']) * -200 +
    (10000 if row['balcon'] == 'da' else 0) +
    (15000 if row['parcare'] == 'da' else 0) +
    np.random.normal(0, 15000),
    axis=1
)

# Rotunjim pre»õurile
df['pret'] = df['pret'].round(-3)  # Rotunjim la mii

print("üìä DATASET CREAT:")
print(f"NumƒÉr de apartamente: {len(df)}")
print(f"\\nPrimele 5 r√¢nduri:")
print(df.head())

# ========================================
# PARTEA 2: INTRODUCEREA VALORILOR LIPSƒÇ
# ========================================

# SimulƒÉm missing values (ca √Æn realitate!)
missing_indices_suprafata = np.random.choice(df.index, size=int(0.15 * len(df)), replace=False)
df.loc[missing_indices_suprafata, 'suprafata'] = np.nan

missing_indices_etaj = np.random.choice(df.index, size=int(0.10 * len(df)), replace=False)
df.loc[missing_indices_etaj, 'etaj'] = np.nan

missing_indices_zona = np.random.choice(df.index, size=int(0.08 * len(df)), replace=False)
df.loc[missing_indices_zona, 'zona'] = np.nan

missing_indices_balcon = np.random.choice(df.index, size=int(0.12 * len(df)), replace=False)
df.loc[missing_indices_balcon, 'balcon'] = np.nan

print("\\n‚ùì VALORI LIPSƒÇ INTRODUSE:")
print(df.isnull().sum())
print(f"\\nProcent total missing: {df.isnull().sum().sum() / (len(df) * len(df.columns)) * 100:.1f}%")

# ========================================
# PARTEA 3: EXPLORAREA DATELOR
# ========================================

print("\\nüîç STATISTICI DESCRIPTIVE:")
print(df.describe())

# VerificƒÉ distribu»õia pre»õurilor
print("\\nüí∞ DISTRIBU»öIA PRE»öURILOR:")
print(f"Min: {df['pret'].min():,.0f} ‚Ç¨")
print(f"Max: {df['pret'].max():,.0f} ‚Ç¨")
print(f"Medie: {df['pret'].mean():,.0f} ‚Ç¨")
print(f"MedianƒÉ: {df['pret'].median():,.0f} ‚Ç¨")

# VerificƒÉ distribu»õia pe zone
print("\\nüèòÔ∏è PRE»öURI MEDII PE ZONE:")
print(df.groupby('zona')['pret'].mean().sort_values(ascending=False).round(0))

# ========================================
# PARTEA 4: VIZUALIZƒÇRI EXPLORATORII
# ========================================

fig, axes = plt.subplots(2, 2, figsize=(15, 12))

# 1. Distribu»õia pre»õurilor
axes[0, 0].hist(df['pret'].dropna(), bins=50, color='skyblue', edgecolor='black', alpha=0.7)
axes[0, 0].axvline(df['pret'].mean(), color='red', linestyle='--', linewidth=2, label=f'Medie: {df["pret"].mean():,.0f}‚Ç¨')
axes[0, 0].axvline(df['pret'].median(), color='green', linestyle='--', linewidth=2, label=f'MedianƒÉ: {df["pret"].median():,.0f}‚Ç¨')
axes[0, 0].set_xlabel('Pre»õ (‚Ç¨)', fontsize=12)
axes[0, 0].set_ylabel('Frecven»õƒÉ', fontsize=12)
axes[0, 0].set_title('Distribu»õia Pre»õurilor Apartamentelor', fontsize=14, fontweight='bold')
axes[0, 0].legend()
axes[0, 0].grid(alpha=0.3)

# 2. Pre»õ vs Suprafa»õƒÉ
axes[0, 1].scatter(df['suprafata'], df['pret'], alpha=0.5, color='coral')
axes[0, 1].set_xlabel('Suprafa»õƒÉ (mp)', fontsize=12)
axes[0, 1].set_ylabel('Pre»õ (‚Ç¨)', fontsize=12)
axes[0, 1].set_title('Pre»õ √Æn Func»õie de Suprafa»õƒÉ', fontsize=14, fontweight='bold')
axes[0, 1].grid(alpha=0.3)

# 3. Pre»õuri medii pe zone
zone_avg = df.groupby('zona')['pret'].mean().sort_values()
axes[1, 0].barh(zone_avg.index, zone_avg.values, color='lightgreen', edgecolor='black')
axes[1, 0].set_xlabel('Pre»õ Mediu (‚Ç¨)', fontsize=12)
axes[1, 0].set_title('Pre»õuri Medii pe Zone', fontsize=14, fontweight='bold')
axes[1, 0].grid(axis='x', alpha=0.3)

# 4. Heatmap missing values
missing_data = df.isnull().sum().sort_values(ascending=False)
missing_percent = (missing_data / len(df) * 100).round(1)
axes[1, 1].barh(missing_data.index, missing_percent.values, color='indianred', edgecolor='black')
axes[1, 1].set_xlabel('Procent Missing (%)', fontsize=12)
axes[1, 1].set_title('Valori LipsƒÉ pe Coloane', fontsize=14, fontweight='bold')
axes[1, 1].grid(axis='x', alpha=0.3)

plt.tight_layout()
plt.savefig('real_estate_exploration.png', dpi=300, bbox_inches='tight')
print("\\n‚úÖ Grafic salvat: real_estate_exploration.png")

# ========================================
# PARTEA 5: SALVAREA DATASET-ULUI
# ========================================

df.to_csv('apartamente_bucuresti.csv', index=False)
print("\\n‚úÖ Dataset salvat: apartamente_bucuresti.csv")

print("""
\\nüéØ CE AM √éNVƒÇ»öAT:

1. CREAREA DATASET-ULUI REALIST:
   - Zone cu pre»õuri diferite
   - Varia»õie naturalƒÉ √Æn date
   - Multiple features (numerical + categorical)

2. MISSING VALUES (cum √Æn realitate!):
   - 15% missing √Æn suprafa»õƒÉ
   - 10% missing √Æn etaj
   - 8% missing √Æn zonƒÉ
   - 12% missing √Æn balcon

3. EXPLORAREA DATELOR:
   - Statistici descriptive
   - Distribu»õii
   - Corela»õii vizuale
   - Identificarea pattern-urilor

4. VIZUALIZƒÇRI:
   - Histograme pentru distribu»õii
   - Scatter plots pentru rela»õii
   - Bar charts pentru compara»õii
   - Missing value analysis

üöÄ URMƒÇTORUL PAS: ColumnTransformer pentru preprocessing!
""")`}
                  />
                </TabsContent>

                <TabsContent value="real" className="mt-6">
                  <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-blue-600 dark:text-blue-400">
                      üè† Aplica»õie √én Lumea RealƒÉ: PlatformƒÉ ImobiliarƒÉ
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-blue-700 dark:text-blue-300">
                          üìã Scenariul Utilizatorului
                        </h4>
                        <div className="space-y-4">
                          <div className="flex items-start gap-3">
                            <span className="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0 font-bold">1</span>
                            <div>
                              <strong>User intrƒÉ pe platformƒÉ:</strong>
                              <p className="text-sm text-gray-600 dark:text-gray-400">"Vreau sƒÉ cumpƒÉr apartament √Æn Floreasca, 3 camere"</p>
                            </div>
                          </div>
                          <div className="flex items-start gap-3">
                            <span className="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0 font-bold">2</span>
                            <div>
                              <strong>PlatformƒÉ colecteazƒÉ preferin»õe:</strong>
                              <p className="text-sm text-gray-600 dark:text-gray-400">ZonƒÉ, numƒÉr camere, etaj dorit, buget maxim</p>
                            </div>
                          </div>
                          <div className="flex items-start gap-3">
                            <span className="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0 font-bold">3</span>
                            <div>
                              <strong>ML Model proceseazƒÉ:</strong>
                              <p className="text-sm text-gray-600 dark:text-gray-400">Features ‚Üí Pipeline ‚Üí Predic»õie pre»õ just</p>
                            </div>
                          </div>
                          <div className="flex items-start gap-3">
                            <span className="bg-blue-500 text-white rounded-full w-8 h-8 flex items-center justify-center flex-shrink-0 font-bold">4</span>
                            <div>
                              <strong>Rezultat pentru user:</strong>
                              <p className="text-sm text-gray-600 dark:text-gray-400">"Pre»õ estimat: 125.000‚Ç¨ ¬± 8.000‚Ç¨. Apartamentele similare se v√¢nd √Æntre 117K-133K."</p>
                            </div>
                          </div>
                        </div>
                      </div>

                      <div className="bg-gradient-to-r from-green-50 to-teal-50 dark:from-green-900/20 dark:to-teal-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-green-700 dark:text-green-300">
                          ‚úÖ Valoarea AdƒÉugatƒÉ
                        </h4>
                        <ul className="space-y-2">
                          <li><strong>Pentru CumpƒÉrƒÉtor:</strong> »òtie dacƒÉ pre»õul cerut e just sau supraevaluat</li>
                          <li><strong>Pentru V√¢nzƒÉtor:</strong> SeteazƒÉ pre»õ competitiv bazat pe market reality</li>
                          <li><strong>Pentru Agent:</strong> Credibilitate prin pre»õuri data-driven</li>
                          <li><strong>Pentru PlatformƒÉ:</strong> Trust »ôi utilizatori fideli</li>
                        </ul>
                      </div>

                      <div className="bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-6 border-l-4 border-yellow-500">
                        <h4 className="text-lg font-semibold mb-2 text-yellow-700 dark:text-yellow-300">
                          ‚ö†Ô∏è ProvocƒÉri Reale
                        </h4>
                        <ul className="text-sm space-y-1">
                          <li>‚Ä¢ Date inconsistente (typos √Æn nume zone)</li>
                          <li>‚Ä¢ Missing values (anun»õuri incomplete)</li>
                          <li>‚Ä¢ Outlieri (penthouse-uri luxury)</li>
                          <li>‚Ä¢ Pia»õa dinamicƒÉ (pre»õurile se schimbƒÉ)</li>
                          <li>‚Ä¢ Features noi (lift, renovare recentƒÉ)</li>
                        </ul>
                      </div>
                    </div>
                  </div>
                </TabsContent>

                <TabsContent value="practice" className="mt-6">
                  <div className="bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-indigo-600 dark:text-indigo-400">
                      ‚úçÔ∏è Exerci»õiu Practic
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 1: Extinde Dataset-ul</h4>
                        <p className="mb-4">AdaugƒÉ features noi: 'tip_apartament' (garsonierƒÉ/decomandat/semidecomandat) »ôi 'orientare' (N/S/E/V)</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p># Hint: folose»ôte np.random.choice()</p>
                          <p>df['tip_apartament'] = np.random.choice([...], n_samples)</p>
                        </div>
                      </div>

                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 2: AnalizƒÉ Corela»õii</h4>
                        <p className="mb-4">CreeazƒÉ o matrice de corela»õii »ôi identificƒÉ care feature are cea mai puternicƒÉ corela»õie cu pre»õul</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p># Hint: selecteazƒÉ doar numerical features</p>
                          <p>numerical_df = df.select_dtypes(include=[np.number])</p>
                          <p>sns.heatmap(numerical_df.corr(), annot=True)</p>
                        </div>
                      </div>

                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 3: Feature Engineering</h4>
                        <p className="mb-4">CreeazƒÉ o nouƒÉ feature 'pret_per_mp' »ôi vizualizeazƒÉ cum variazƒÉ pe zone</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p>df['pret_per_mp'] = df['pret'] / df['suprafata']</p>
                          <p>df.groupby('zona')['pret_per_mp'].mean().plot(kind='bar')</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </Card>
          </TabsContent>

          {/* Part 2: Column Transformer Pipeline */}
          <TabsContent value="part2">
            <Card className="p-8 bg-white/95 dark:bg-gray-800/95 backdrop-blur border-2 border-purple-200 dark:border-purple-700">
              <h2 className="text-3xl font-bold mb-6 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                üîß Partea 2: ColumnTransformer - Pipeline Complex
              </h2>

              <div className="prose dark:prose-invert max-w-none mb-8">
                <div className="bg-white/60 dark:bg-gray-800/60 rounded-lg p-6 mb-6">
                  <h3 className="text-2xl font-bold mb-4 text-purple-700 dark:text-purple-300">
                    ü§î Problema: DouƒÉ Tipuri De Features
                  </h3>
                  <p className="text-lg mb-4">
                    Dataset-ul nostru are DOUƒÇ tipuri diferite de features, fiecare necesit√¢nd preprocessing diferit:
                  </p>

                  <div className="grid md:grid-cols-2 gap-6 mt-6">
                    <div className="bg-blue-50 dark:bg-blue-900/20 rounded p-4">
                      <h4 className="font-semibold text-blue-700 dark:text-blue-300 mb-2">üìä Numerical Features:</h4>
                      <ul className="text-sm space-y-1">
                        <li>‚Ä¢ <code>suprafata</code> (35-120 mp)</li>
                        <li>‚Ä¢ <code>numar_camere</code> (1-4)</li>
                        <li>‚Ä¢ <code>etaj</code> (0-10)</li>
                        <li>‚Ä¢ <code>an_constructie</code> (1970-2024)</li>
                      </ul>
                      <p className="mt-3 text-sm font-semibold text-blue-600">‚Üí SimpleImputer(mean) + StandardScaler</p>
                    </div>

                    <div className="bg-pink-50 dark:bg-pink-900/20 rounded p-4">
                      <h4 className="font-semibold text-pink-700 dark:text-pink-300 mb-2">üè∑Ô∏è Categorical Features:</h4>
                      <ul className="text-sm space-y-1">
                        <li>‚Ä¢ <code>zona</code> ("Floreasca", "Pipera"...)</li>
                        <li>‚Ä¢ <code>balcon</code> ("da", "nu")</li>
                        <li>‚Ä¢ <code>parcare</code> ("da", "nu")</li>
                      </ul>
                      <p className="mt-3 text-sm font-semibold text-pink-600">‚Üí SimpleImputer(most_frequent) + OneHotEncoder</p>
                    </div>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-purple-100 to-pink-100 dark:from-purple-900/30 dark:to-pink-900/30 rounded-lg p-6">
                  <h4 className="text-xl font-semibold mb-3 text-purple-800 dark:text-purple-200">
                    üéØ Solu»õia: ColumnTransformer
                  </h4>
                  <p className="mb-3">
                    ColumnTransformer aplicƒÉ transformƒÉri DIFERITE pe coloane DIFERITE, toate √Æn acela»ôi timp, corect, fƒÉrƒÉ data leakage!
                  </p>
                  <p className="text-sm italic">
                    "One transformer to rule them all, one pipeline to bind them!"
                  </p>
                </div>
              </div>

              <Tabs defaultValue="code" className="mt-6">
                <TabsList className="grid grid-cols-2 w-full">
                  <TabsTrigger value="code">üíª Cod Complet</TabsTrigger>
                  <TabsTrigger value="visual">üìä Vizualizare Pipeline</TabsTrigger>
                </TabsList>

                <TabsContent value="code" className="mt-6">
                  <CodeBlock
                    id="column-transformer"
                    title="ColumnTransformer - Preprocessing Complex"
                    code={`import pandas as pd
import numpy as np
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.model_selection import train_test_split

# √éncarcƒÉ dataset-ul
df = pd.read_csv('apartamente_bucuresti.csv')

# ========================================
# PARTEA 1: SEPARAREA FEATURES & TARGET
# ========================================

# Features (X) »ôi Target (y)
X = df.drop('pret', axis=1)
y = df['pret']

print("üìä STRUCTURA DATELOR:")
print(f"Features (X): {X.shape}")
print(f"Target (y): {y.shape}")
print(f"\\nColoane √Æn X:\\n{X.columns.tolist()}")

# ========================================
# PARTEA 2: IDENTIFICAREA TIPURILOR
# ========================================

# IdentificƒÉ automat coloanele numerice »ôi categorice
numerical_features = X.select_dtypes(include=['int64', 'float64']).columns.tolist()
categorical_features = X.select_dtypes(include=['object']).columns.tolist()

print(f"\\nüî¢ NUMERICAL FEATURES ({len(numerical_features)}):")
print(numerical_features)

print(f"\\nüè∑Ô∏è CATEGORICAL FEATURES ({len(categorical_features)}):")
print(categorical_features)

# ========================================
# PARTEA 3: CREAREA TRANSFORMERS
# ========================================

# Transformer pentru features numerice
numerical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='mean')),    # CompleteazƒÉ cu media
    ('scaler', StandardScaler())                     # NormalizeazƒÉ
])

# Transformer pentru features categorice
categorical_transformer = Pipeline(steps=[
    ('imputer', SimpleImputer(strategy='most_frequent')),  # CompleteazƒÉ cu cel mai frecvent
    ('onehot', OneHotEncoder(handle_unknown='ignore', sparse_output=False))  # Encodare
])

print("\\n‚úÖ TRANSFORMERS CREA»öI:")
print("  1. Numerical: SimpleImputer(mean) ‚Üí StandardScaler")
print("  2. Categorical: SimpleImputer(most_frequent) ‚Üí OneHotEncoder")

# ========================================
# PARTEA 4: COLUMN TRANSFORMER
# ========================================

# CombinƒÉm transformers-ii folosind ColumnTransformer
preprocessor = ColumnTransformer(
    transformers=[
        ('num', numerical_transformer, numerical_features),
        ('cat', categorical_transformer, categorical_features)
    ],
    remainder='drop'  # Drop orice altƒÉ coloanƒÉ nespecificatƒÉ
)

print("\\nüîß COLUMN TRANSFORMER CREAT!")
print(f"  - Va procesa {len(numerical_features)} numerical features")
print(f"  - Va procesa {len(categorical_features)} categorical features")

# ========================================
# PARTEA 5: TRAIN-TEST SPLIT
# ========================================

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

print(f"\\nüì¶ TRAIN-TEST SPLIT:")
print(f"Training set: {X_train.shape[0]} apartamente ({X_train.shape[0]/len(X)*100:.1f}%)")
print(f"Test set: {X_test.shape[0]} apartamente ({X_test.shape[0]/len(X)*100:.1f}%)")

# ========================================
# PARTEA 6: FIT & TRANSFORM
# ========================================

# Fit preprocessor pe training data
X_train_processed = preprocessor.fit_transform(X_train)
X_test_processed = preprocessor.transform(X_test)

print(f"\\nüéØ PREPROCESSING COMPLET:")
print(f"  √énainte: {X_train.shape} ‚Üí DupƒÉ: {X_train_processed.shape}")
print(f"  Features create: {X_train_processed.shape[1]}")

# ========================================
# PARTEA 7: √éN»öELEGEREA OUTPUT-ULUI
# ========================================

# Ob»õine numele features dupƒÉ OneHotEncoding
feature_names = []

# Numerical features (same names)
feature_names.extend(numerical_features)

# Categorical features (get encoded names from OneHotEncoder)
cat_encoder = preprocessor.named_transformers_['cat']['onehot']
cat_feature_names = cat_encoder.get_feature_names_out(categorical_features)
feature_names.extend(cat_feature_names)

print(f"\\nüìã TOATE FEATURES DUPƒÇ PREPROCESSING ({len(feature_names)}):")
for i, name in enumerate(feature_names[:20], 1):  # Afi»ôƒÉm primele 20
    print(f"  {i}. {name}")
if len(feature_names) > 20:
    print(f"  ... »ôi {len(feature_names) - 20} mai multe")

# Exemplu: Cum aratƒÉ o singurƒÉ observa»õie dupƒÉ preprocessing
print(f"\\nüîç EXEMPLU - PRIMA OBSERVA»öIE TRAIN:")
print(f"√énainte (primele 5 features):\\n{X_train.iloc[0][:5]}")
print(f"\\nDupƒÉ preprocessing (primele 10 values):\\n{X_train_processed[0][:10]}")

# ========================================
# CE SE √éNT√ÇMPLƒÇ √éN SPATE?
# ========================================

print("""
\\nüí° CE FACE COLUMN TRANSFORMER:

1. PENTRU NUMERICAL FEATURES:
   - suprafata: 75 mp (cu missing) ‚Üí impute cu mean ‚Üí scale cu StandardScaler ‚Üí 0.42
   - etaj: 3 ‚Üí scale ‚Üí -0.15
   - numar_camere: 2 ‚Üí scale ‚Üí 0.38

2. PENTRU CATEGORICAL FEATURES:
   - zona: "Floreasca" ‚Üí OneHotEncoder ‚Üí [0,0,0,1,0,0,0,0]
   - balcon: "da" ‚Üí OneHotEncoder ‚Üí [1,0]
   - parcare: "nu" ‚Üí OneHotEncoder ‚Üí [0,1]

3. CONCATENEAZƒÇ TOT:
   [0.42, -0.15, 0.38, ..., 0,0,0,1,0,0,0,0, 1,0, 0,1]

4. REZULTAT:
   - Vector numeric complet
   - Gata pentru ML model
   - ZERO data leakage (test folose»ôte parametrii din train!)

üöÄ URMƒÇTORUL PAS: Antrenarea modelelor!
""")`}
                  />
                </TabsContent>

                <TabsContent value="visual" className="mt-6">
                  <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-purple-600 dark:text-purple-400">
                      üìä Vizualizare: Fluxul ColumnTransformer
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-4 text-blue-700 dark:text-blue-300">
                          üì• INPUT: Date Raw
                        </h4>
                        <div className="bg-white dark:bg-gray-900 rounded p-4 font-mono text-sm overflow-x-auto">
                          <table className="w-full text-left">
                            <thead>
                              <tr className="border-b-2">
                                <th className="p-2">zona</th>
                                <th className="p-2">suprafata</th>
                                <th className="p-2">camere</th>
                                <th className="p-2">balcon</th>
                                <th className="p-2">pret</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr className="border-b">
                                <td className="p-2 text-pink-500">Floreasca</td>
                                <td className="p-2 text-blue-500">75</td>
                                <td className="p-2 text-blue-500">2</td>
                                <td className="p-2 text-pink-500">da</td>
                                <td className="p-2 text-green-500">145000</td>
                              </tr>
                              <tr className="border-b">
                                <td className="p-2 text-pink-500">Pipera</td>
                                <td className="p-2 text-red-500">NaN</td>
                                <td className="p-2 text-blue-500">3</td>
                                <td className="p-2 text-pink-500">da</td>
                                <td className="p-2 text-green-500">178000</td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>

                      <div className="flex justify-center">
                        <div className="text-4xl">‚¨áÔ∏è</div>
                      </div>

                      <div className="grid md:grid-cols-2 gap-6">
                        <div className="bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-900/20 dark:to-cyan-900/20 rounded-lg p-6">
                          <h4 className="text-lg font-semibold mb-3 text-blue-700 dark:text-blue-300">
                            üî¢ Pipeline Numerical
                          </h4>
                          <div className="space-y-3">
                            <div className="bg-white dark:bg-gray-800 rounded p-3">
                              <p className="text-sm font-semibold mb-1">1. SimpleImputer (mean)</p>
                              <p className="text-xs text-gray-600 dark:text-gray-400">suprafata: NaN ‚Üí 78.5 (media)</p>
                            </div>
                            <div className="text-center text-2xl">‚Üì</div>
                            <div className="bg-white dark:bg-gray-800 rounded p-3">
                              <p className="text-sm font-semibold mb-1">2. StandardScaler</p>
                              <p className="text-xs text-gray-600 dark:text-gray-400">suprafata: 78.5 ‚Üí 0.42</p>
                            </div>
                          </div>
                        </div>

                        <div className="bg-gradient-to-br from-pink-50 to-purple-50 dark:from-pink-900/20 dark:to-purple-900/20 rounded-lg p-6">
                          <h4 className="text-lg font-semibold mb-3 text-pink-700 dark:text-pink-300">
                            üè∑Ô∏è Pipeline Categorical
                          </h4>
                          <div className="space-y-3">
                            <div className="bg-white dark:bg-gray-800 rounded p-3">
                              <p className="text-sm font-semibold mb-1">1. SimpleImputer (most_frequent)</p>
                              <p className="text-xs text-gray-600 dark:text-gray-400">zona: NaN ‚Üí "Floreasca"</p>
                            </div>
                            <div className="text-center text-2xl">‚Üì</div>
                            <div className="bg-white dark:bg-gray-800 rounded p-3">
                              <p className="text-sm font-semibold mb-1">2. OneHotEncoder</p>
                              <p className="text-xs text-gray-600 dark:text-gray-400">zona: "Floreasca" ‚Üí [0,0,1,0,0]</p>
                            </div>
                          </div>
                        </div>
                      </div>

                      <div className="flex justify-center">
                        <div className="text-4xl">‚¨áÔ∏è</div>
                      </div>

                      <div className="bg-gradient-to-r from-green-50 to-teal-50 dark:from-green-900/20 dark:to-teal-900/20 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-4 text-green-700 dark:text-green-300">
                          üì§ OUTPUT: Vector Numeric Complet
                        </h4>
                        <div className="bg-white dark:bg-gray-900 rounded p-4 font-mono text-sm">
                          <p className="text-green-600">[0.42, -0.15, 0.38, 0.22, 0,0,1,0,0, 1,0, 1,0]</p>
                          <p className="text-xs text-gray-500 mt-2">‚Üë Gata pentru ML model!</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </Card>
          </TabsContent>

          {/* Part 3: Three Models Comparison */}
          <TabsContent value="part3">
            <Card className="p-8 bg-white/95 dark:bg-gray-800/95 backdrop-blur border-2 border-green-200 dark:border-green-700">
              <h2 className="text-3xl font-bold mb-6 bg-gradient-to-r from-green-600 to-teal-600 bg-clip-text text-transparent">
                ü§ñ Partea 3: Trei Modele - Trei Perspective
              </h2>

              <div className="prose dark:prose-invert max-w-none mb-8">
                <div className="bg-white/60 dark:bg-gray-800/60 rounded-lg p-6 mb-6">
                  <h3 className="text-2xl font-bold mb-4 text-green-700 dark:text-green-300">
                    ‚öñÔ∏è Compararea Modelelor De Regression
                  </h3>
                  <p className="text-lg mb-4">
                    Nu existƒÉ "modelul perfect universal". ExistƒÉ modelul POTRIVIT pentru datele tale.
                  </p>

                  <div className="grid md:grid-cols-3 gap-4 mt-6">
                    <div className="bg-blue-50 dark:bg-blue-900/20 rounded p-4 border-l-4 border-blue-500">
                      <h4 className="font-semibold text-blue-700 dark:text-blue-300 mb-2">1Ô∏è‚É£ Linear Regression</h4>
                      <p className="text-sm mb-2"><strong>Filosofie:</strong> Rela»õia e simplƒÉ »ôi liniarƒÉ</p>
                      <p className="text-xs text-gray-600 dark:text-gray-400">‚úÖ Rapid, interpretabil, baseline perfect</p>
                    </div>

                    <div className="bg-purple-50 dark:bg-purple-900/20 rounded p-4 border-l-4 border-purple-500">
                      <h4 className="font-semibold text-purple-700 dark:text-purple-300 mb-2">2Ô∏è‚É£ Ridge Regression</h4>
                      <p className="text-sm mb-2"><strong>Filosofie:</strong> Previne overfitting cu regularizare</p>
                      <p className="text-xs text-gray-600 dark:text-gray-400">‚úÖ L2 penalty, GridSearch pentru alpha</p>
                    </div>

                    <div className="bg-green-50 dark:bg-green-900/20 rounded p-4 border-l-4 border-green-500">
                      <h4 className="font-semibold text-green-700 dark:text-green-300 mb-2">3Ô∏è‚É£ Random Forest</h4>
                      <p className="text-sm mb-2"><strong>Filosofie:</strong> CaptureazƒÉ pattern-uri non-lineare</p>
                      <p className="text-xs text-gray-600 dark:text-gray-400">‚úÖ 100 arbori, feature importance gratis</p>
                    </div>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-green-100 to-teal-100 dark:from-green-900/30 dark:to-teal-900/30 rounded-lg p-6">
                  <h4 className="text-xl font-semibold mb-3 text-green-800 dark:text-green-200">
                    üéØ Metodologia ComparƒÉrii
                  </h4>
                  <ol className="space-y-2">
                    <li><strong>1. Train fiecare model</strong> pe acelea»ôi date de training</li>
                    <li><strong>2. Predict</strong> pe acela»ôi test set</li>
                    <li><strong>3. CalculeazƒÉ metrici</strong>: R¬≤, RMSE, MAE</li>
                    <li><strong>4. ComparƒÉ rezultatele</strong> »ôi alege cel mai bun</li>
                  </ol>
                </div>
              </div>

              <Tabs defaultValue="code" className="mt-6">
                <TabsList className="grid grid-cols-3 w-full">
                  <TabsTrigger value="code">üíª Cod Complet</TabsTrigger>
                  <TabsTrigger value="metrics">üìä Metrici Explicate</TabsTrigger>
                  <TabsTrigger value="practice">‚úçÔ∏è Exerci»õiu</TabsTrigger>
                </TabsList>

                <TabsContent value="code" className="mt-6">
                  <CodeBlock
                    id="three-models"
                    title="Trei Modele De Regression - Compara»õie CompletƒÉ"
                    code={`import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.linear_model import LinearRegression, Ridge
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error
import matplotlib.pyplot as plt

# Presupunem cƒÉ avem X_train_processed, X_test_processed, y_train, y_test
# din partea anterioarƒÉ (dupƒÉ ColumnTransformer)

# ========================================
# MODEL 1: LINEAR REGRESSION (BASELINE)
# ========================================

print("=" * 60)
print("MODEL 1: LINEAR REGRESSION")
print("=" * 60)

# CreeazƒÉ »ôi antreneazƒÉ modelul
lr_model = LinearRegression()
lr_model.fit(X_train_processed, y_train)

# Predic»õii
y_train_pred_lr = lr_model.predict(X_train_processed)
y_test_pred_lr = lr_model.predict(X_test_processed)

# Evaluare
r2_train_lr = r2_score(y_train, y_train_pred_lr)
r2_test_lr = r2_score(y_test, y_test_pred_lr)
rmse_test_lr = np.sqrt(mean_squared_error(y_test, y_test_pred_lr))
mae_test_lr = mean_absolute_error(y_test, y_test_pred_lr)

print(f"\\nüìä REZULTATE LINEAR REGRESSION:")
print(f"  R¬≤ Train: {r2_train_lr:.4f}")
print(f"  R¬≤ Test:  {r2_test_lr:.4f}")
print(f"  RMSE:     {rmse_test_lr:,.0f} ‚Ç¨")
print(f"  MAE:      {mae_test_lr:,.0f} ‚Ç¨")

# ========================================
# MODEL 2: RIDGE REGRESSION + GRID SEARCH
# ========================================

print("\\n" + "=" * 60)
print("MODEL 2: RIDGE REGRESSION (cu GridSearchCV)")
print("=" * 60)

# Define»ôte parametrii pentru Grid Search
param_grid = {
    'alpha': [0.1, 1, 10, 100, 1000]
}

# CreeazƒÉ Ridge cu GridSearchCV
ridge = Ridge()
grid_search = GridSearchCV(
    ridge,
    param_grid,
    cv=5,  # 5-fold cross-validation
    scoring='neg_mean_squared_error',
    n_jobs=-1
)

# AntreneazƒÉ cu Grid Search
grid_search.fit(X_train_processed, y_train)

# Best model
best_ridge = grid_search.best_estimator_
best_alpha = grid_search.best_params_['alpha']

print(f"\\nüîç GRID SEARCH RESULTS:")
print(f"  Best alpha: {best_alpha}")
print(f"  Best CV score: {-grid_search.best_score_:,.0f} (MSE)")

# Predic»õii cu best model
y_train_pred_ridge = best_ridge.predict(X_train_processed)
y_test_pred_ridge = best_ridge.predict(X_test_processed)

# Evaluare
r2_train_ridge = r2_score(y_train, y_train_pred_ridge)
r2_test_ridge = r2_score(y_test, y_test_pred_ridge)
rmse_test_ridge = np.sqrt(mean_squared_error(y_test, y_test_pred_ridge))
mae_test_ridge = mean_absolute_error(y_test, y_test_pred_ridge)

print(f"\\nüìä REZULTATE RIDGE REGRESSION:")
print(f"  R¬≤ Train: {r2_train_ridge:.4f}")
print(f"  R¬≤ Test:  {r2_test_ridge:.4f}")
print(f"  RMSE:     {rmse_test_ridge:,.0f} ‚Ç¨")
print(f"  MAE:      {mae_test_ridge:,.0f} ‚Ç¨")

# ========================================
# MODEL 3: RANDOM FOREST REGRESSOR
# ========================================

print("\\n" + "=" * 60)
print("MODEL 3: RANDOM FOREST REGRESSOR")
print("=" * 60)

# CreeazƒÉ »ôi antreneazƒÉ Random Forest
rf_model = RandomForestRegressor(
    n_estimators=100,    # 100 de arbori
    max_depth=15,        # LimitƒÉ ad√¢ncime pentru a preveni overfitting
    min_samples_split=5,
    random_state=42,
    n_jobs=-1
)

rf_model.fit(X_train_processed, y_train)

# Predic»õii
y_train_pred_rf = rf_model.predict(X_train_processed)
y_test_pred_rf = rf_model.predict(X_test_processed)

# Evaluare
r2_train_rf = r2_score(y_train, y_train_pred_rf)
r2_test_rf = r2_score(y_test, y_test_pred_rf)
rmse_test_rf = np.sqrt(mean_squared_error(y_test, y_test_pred_rf))
mae_test_rf = mean_absolute_error(y_test, y_test_pred_rf)

print(f"\\nüìä REZULTATE RANDOM FOREST:")
print(f"  R¬≤ Train: {r2_train_rf:.4f}")
print(f"  R¬≤ Test:  {r2_test_rf:.4f}")
print(f"  RMSE:     {rmse_test_rf:,.0f} ‚Ç¨")
print(f"  MAE:      {mae_test_rf:,.0f} ‚Ç¨")

# ========================================
# COMPARA»öIE FINALƒÇ
# ========================================

print("\\n" + "=" * 60)
print("üìä COMPARA»öIE FINALƒÇ - TOATE MODELELE")
print("=" * 60)

# CreeazƒÉ tabel comparativ
comparison = pd.DataFrame({
    'Model': ['Linear Regression', 'Ridge Regression', 'Random Forest'],
    'R¬≤ Train': [r2_train_lr, r2_train_ridge, r2_train_rf],
    'R¬≤ Test': [r2_test_lr, r2_test_ridge, r2_test_rf],
    'RMSE (‚Ç¨)': [rmse_test_lr, rmse_test_ridge, rmse_test_rf],
    'MAE (‚Ç¨)': [mae_test_lr, mae_test_ridge, mae_test_rf]
})

print("\\n" + comparison.to_string(index=False))

# IdentificƒÉ best model
best_model_idx = comparison['R¬≤ Test'].idxmax()
best_model_name = comparison.loc[best_model_idx, 'Model']

print(f"\\nüèÜ BEST MODEL: {best_model_name}")
print(f"   R¬≤ Test: {comparison.loc[best_model_idx, 'R¬≤ Test']:.4f}")
print(f"   RMSE: {comparison.loc[best_model_idx, 'RMSE (‚Ç¨)']:,.0f} ‚Ç¨")

# ========================================
# VIZUALIZARE COMPARA»öIE
# ========================================

fig, axes = plt.subplots(1, 2, figsize=(15, 5))

# 1. Compara»õie R¬≤ scores
models = comparison['Model']
r2_train_scores = comparison['R¬≤ Train']
r2_test_scores = comparison['R¬≤ Test']

x = np.arange(len(models))
width = 0.35

axes[0].bar(x - width/2, r2_train_scores, width, label='R¬≤ Train', color='lightblue', edgecolor='black')
axes[0].bar(x + width/2, r2_test_scores, width, label='R¬≤ Test', color='coral', edgecolor='black')
axes[0].set_xlabel('Model', fontsize=12)
axes[0].set_ylabel('R¬≤ Score', fontsize=12)
axes[0].set_title('Compara»õie R¬≤ Scores', fontsize=14, fontweight='bold')
axes[0].set_xticks(x)
axes[0].set_xticklabels(models, rotation=15, ha='right')
axes[0].legend()
axes[0].grid(axis='y', alpha=0.3)
axes[0].set_ylim(0, 1)

# 2. Compara»õie RMSE
rmse_scores = comparison['RMSE (‚Ç¨)']
colors = ['lightblue', 'lightgreen', 'coral']
axes[1].bar(models, rmse_scores, color=colors, edgecolor='black')
axes[1].set_xlabel('Model', fontsize=12)
axes[1].set_ylabel('RMSE (‚Ç¨)', fontsize=12)
axes[1].set_title('Compara»õie RMSE (Lower is Better)', fontsize=14, fontweight='bold')
axes[1].set_xticklabels(models, rotation=15, ha='right')
axes[1].grid(axis='y', alpha=0.3)

# AdaugƒÉ valori pe bare
for i, v in enumerate(rmse_scores):
    axes[1].text(i, v + max(rmse_scores)*0.02, f'{v:,.0f}‚Ç¨', ha='center', fontweight='bold')

plt.tight_layout()
plt.savefig('models_comparison.png', dpi=300, bbox_inches='tight')
print("\\n‚úÖ Grafic salvat: models_comparison.png")

# ========================================
# INTERPRETARE & CONCLUZII
# ========================================

print("""
\\nüí° INTERPRETARE REZULTATE:

1. R¬≤ SCORE (0 to 1, higher is better):
   - MƒÉsoarƒÉ c√¢t de bine modelul explicƒÉ varia»õia √Æn pre»õ
   - R¬≤ = 0.85 √ÆnseamnƒÉ: modelul explicƒÉ 85% din varia»õia pre»õurilor
   - ComparƒÉ Train vs Test pentru a detecta overfitting

2. RMSE (Root Mean Squared Error):
   - Eroarea medie √Æn unitƒÉ»õi de pre»õ (‚Ç¨)
   - RMSE = 15.000‚Ç¨ √ÆnseamnƒÉ: predic»õiile gre»ôesc √Æn medie cu ¬±15.000‚Ç¨
   - Sensibil la outlieri (errori mari sunt penalizate mai mult)

3. MAE (Mean Absolute Error):
   - Eroarea medie absolutƒÉ √Æn pre»õ
   - MAE = 12.000‚Ç¨ √ÆnseamnƒÉ: devia»õia absolutƒÉ medie este 12.000‚Ç¨
   - Mai robust la outlieri dec√¢t RMSE

üéØ ALEGEREA MODELULUI:
   - DacƒÉ Train R¬≤ >> Test R¬≤ ‚Üí Overfitting
   - DacƒÉ ambele R¬≤ sunt similare ‚Üí Good generalization
   - Alege modelul cu cel mai bun R¬≤ Test »ôi RMSE mic

üöÄ URMƒÇTORUL PAS: Vizualizarea predic»õiilor!
""")`}
                  />
                </TabsContent>

                <TabsContent value="metrics" className="mt-6">
                  <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-green-600 dark:text-green-400">
                      üìä Metrici De Evaluare - Explained
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-blue-700 dark:text-blue-300">
                          üìà R¬≤ Score (R-Squared)
                        </h4>
                        <p className="mb-3"><strong>Formula:</strong> R¬≤ = 1 - (SS_res / SS_tot)</p>
                        <p className="mb-3"><strong>Range:</strong> 0 to 1 (higher is better)</p>
                        <div className="bg-white dark:bg-gray-900 rounded p-4">
                          <p className="font-semibold mb-2">Interpretare:</p>
                          <ul className="space-y-1 text-sm">
                            <li>‚Ä¢ <strong>R¬≤ = 0.90</strong> ‚Üí Modelul explicƒÉ 90% din varia»õie (EXCELLENT)</li>
                            <li>‚Ä¢ <strong>R¬≤ = 0.75</strong> ‚Üí Modelul explicƒÉ 75% din varia»õie (GOOD)</li>
                            <li>‚Ä¢ <strong>R¬≤ = 0.50</strong> ‚Üí Modelul explicƒÉ 50% din varia»õie (MEDIOCRE)</li>
                            <li>‚Ä¢ <strong>R¬≤ = 0.20</strong> ‚Üí Modelul explicƒÉ 20% din varia»õie (POOR)</li>
                          </ul>
                        </div>
                      </div>

                      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-purple-700 dark:text-purple-300">
                          üìè RMSE (Root Mean Squared Error)
                        </h4>
                        <p className="mb-3"><strong>Formula:</strong> RMSE = ‚àö(Œ£(y_pred - y_actual)¬≤ / n)</p>
                        <p className="mb-3"><strong>UnitƒÉ»õi:</strong> Acelea»ôi ca target-ul (‚Ç¨)</p>
                        <div className="bg-white dark:bg-gray-900 rounded p-4">
                          <p className="font-semibold mb-2">Exemplu Real:</p>
                          <div className="text-sm space-y-2">
                            <p>Pre»õ real: 120.000‚Ç¨</p>
                            <p>Pre»õ prezis: 110.000‚Ç¨</p>
                            <p>Error: 10.000‚Ç¨</p>
                            <p className="mt-3"><strong>RMSE = 15.000‚Ç¨</strong> √ÆnseamnƒÉ:</p>
                            <p className="text-gray-600 dark:text-gray-400">"√én medie, predic»õiile mele gre»ôesc cu ¬±15.000‚Ç¨"</p>
                          </div>
                        </div>
                      </div>

                      <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-green-700 dark:text-green-300">
                          üìê MAE (Mean Absolute Error)
                        </h4>
                        <p className="mb-3"><strong>Formula:</strong> MAE = Œ£|y_pred - y_actual| / n</p>
                        <p className="mb-3"><strong>UnitƒÉ»õi:</strong> Acelea»ôi ca target-ul (‚Ç¨)</p>
                        <div className="bg-white dark:bg-gray-900 rounded p-4">
                          <p className="font-semibold mb-2">Diferen»õa fa»õƒÉ de RMSE:</p>
                          <ul className="space-y-1 text-sm">
                            <li>‚Ä¢ <strong>MAE:</strong> Eroarea absolutƒÉ medie (mai robustƒÉ la outlieri)</li>
                            <li>‚Ä¢ <strong>RMSE:</strong> PenalizeazƒÉ mai mult erorile mari</li>
                            <li>‚Ä¢ DacƒÉ RMSE mai mare decat MAE ‚Üí Multe outlieri √Æn predic»õii</li>
                            <li>‚Ä¢ DacƒÉ RMSE ‚âà MAE ‚Üí Erori consistente</li>
                          </ul>
                        </div>
                      </div>

                      <div className="bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-6 border-l-4 border-yellow-500">
                        <h4 className="text-lg font-semibold mb-2 text-yellow-700 dark:text-yellow-300">
                          ‚ö†Ô∏è Train vs Test - Detectarea Overfitting
                        </h4>
                        <div className="text-sm space-y-2">
                          <p><strong>Scenariu 1: HEALTHY</strong></p>
                          <p className="text-green-600">R¬≤ Train: 0.87 | R¬≤ Test: 0.85</p>
                          <p className="text-xs">‚úÖ Model generalizeazƒÉ bine</p>

                          <p className="mt-3"><strong>Scenariu 2: OVERFITTING</strong></p>
                          <p className="text-red-600">R¬≤ Train: 0.99 | R¬≤ Test: 0.65</p>
                          <p className="text-xs">‚ùå Modelul a memorat training data</p>

                          <p className="mt-3"><strong>Scenariu 3: UNDERFITTING</strong></p>
                          <p className="text-orange-600">R¬≤ Train: 0.45 | R¬≤ Test: 0.42</p>
                          <p className="text-xs">‚ö†Ô∏è Modelul prea simplu</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>

                <TabsContent value="practice" className="mt-6">
                  <div className="bg-gradient-to-r from-green-50 to-teal-50 dark:from-green-900/20 dark:to-teal-900/20 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-green-600 dark:text-green-400">
                      ‚úçÔ∏è Exerci»õiu Practic
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 1: GradientBoostingRegressor</h4>
                        <p className="mb-4">AdaugƒÉ un al 4-lea model: GradientBoostingRegressor »ôi comparƒÉ cu cele 3 existente</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p>from sklearn.ensemble import GradientBoostingRegressor</p>
                          <p className="mt-2">gb_model = GradientBoostingRegressor(</p>
                          <p>    n_estimators=100,</p>
                          <p>    learning_rate=0.1,</p>
                          <p>    max_depth=5,</p>
                          <p>    random_state=42</p>
                          <p>)</p>
                        </div>
                        <p className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                          <strong>√éntrebare:</strong> Este mai bun dec√¢t Random Forest? De ce?
                        </p>
                      </div>

                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 2: Hyperparameter Tuning pentru Random Forest</h4>
                        <p className="mb-4">Folose»ôte GridSearchCV pentru a optimiza hyperparametrii Random Forest</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p>param_grid_rf = </p>
                          <p>    'n_estimators': [50, 100, 200],</p>
                          <p>    'max_depth': [10, 15, 20, None],</p>
                          <p>    'min_samples_split': [2, 5, 10]</p>
                        </div>
                        <p className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                          <strong>Provocare:</strong> √émbunƒÉtƒÉ»õe»ôte R¬≤ Test cu minimum 2%
                        </p>
                      </div>

                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 3: Feature Importance Analysis</h4>
                        <p className="mb-4">Extrage »ôi vizualizeazƒÉ top 10 cele mai importante features din Random Forest</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p>importances = rf_model.feature_importances_</p>
                          <p>feature_importance_df = pd.DataFrame(</p>
                          <p>    'feature': feature_names,</p>
                          <p>    'importance': importances</p>
                          <p>).sort_values('importance', ascending=False)</p>
                        </div>
                        <p className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                          <strong>√éntrebare:</strong> Care feature influen»õeazƒÉ cel mai mult pre»õul?
                        </p>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </Card>
          </TabsContent>

          {/* Part 4: Visualizations */}
          <TabsContent value="part4">
            <Card className="p-8 bg-white/95 dark:bg-gray-800/95 backdrop-blur border-2 border-orange-200 dark:border-orange-700">
              <h2 className="text-3xl font-bold mb-6 bg-gradient-to-r from-orange-600 to-red-600 bg-clip-text text-transparent">
                üìà Partea 4: VizualizƒÉri & Diagnostic
              </h2>

              <div className="prose dark:prose-invert max-w-none mb-8">
                <div className="bg-white/60 dark:bg-gray-800/60 rounded-lg p-6 mb-6">
                  <h3 className="text-2xl font-bold mb-4 text-orange-700 dark:text-orange-300">
                    üîç De Ce VizualizƒÉri?
                  </h3>
                  <p className="text-lg mb-4">
                    Metricile numerice (R¬≤, RMSE) spun "c√¢t de bine". VizualizƒÉrile spun "UNDE »ôi DE CE" modelul gre»ôe»ôte.
                  </p>

                  <div className="grid md:grid-cols-2 gap-4 mt-6">
                    <div className="bg-blue-50 dark:bg-blue-900/20 rounded p-4">
                      <h4 className="font-semibold text-blue-700 dark:text-blue-300 mb-2">üìä Prediction vs Actual</h4>
                      <p className="text-sm">AratƒÉ visual c√¢t de aproape sunt predic»õiile de realitate</p>
                      <p className="text-xs text-gray-600 dark:text-gray-400 mt-2">
                        <strong>Ideal:</strong> Toate punctele pe linia diagonalƒÉ y=x
                      </p>
                    </div>

                    <div className="bg-red-50 dark:bg-red-900/20 rounded p-4">
                      <h4 className="font-semibold text-red-700 dark:text-red-300 mb-2">üìâ Residuals Analysis</h4>
                      <p className="text-sm">Distribu»õia erorilor - gƒÉse»ôte pattern-uri √Æn gre»ôeli</p>
                      <p className="text-xs text-gray-600 dark:text-gray-400 mt-2">
                        <strong>Ideal:</strong> Distribu»õie normalƒÉ centratƒÉ pe 0
                      </p>
                    </div>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-orange-100 to-red-100 dark:from-orange-900/30 dark:to-red-900/30 rounded-lg p-6">
                  <h4 className="text-xl font-semibold mb-3 text-orange-800 dark:text-orange-200">
                    üí° Ce Cau»õi √én Grafice
                  </h4>
                  <ul className="space-y-2">
                    <li><strong>Punct pe linie perfectƒÉ (y=x)</strong> ‚Üí Predic»õie perfectƒÉ</li>
                    <li><strong>Punct deasupra liniei</strong> ‚Üí Model SUPRAEVALUEAZƒÇ (crede cƒÉ e mai scump)</li>
                    <li><strong>Punct dedesubt</strong> ‚Üí Model SUBEVALUEAZƒÇ (crede cƒÉ e mai ieftin)</li>
                    <li><strong>Spread mare</strong> ‚Üí Variance mare √Æn predic»õii</li>
                  </ul>
                </div>
              </div>

              <Tabs defaultValue="code" className="mt-6">
                <TabsList className="grid grid-cols-3 w-full">
                  <TabsTrigger value="code">üíª Cod Complet</TabsTrigger>
                  <TabsTrigger value="interpret">üß† Interpretare</TabsTrigger>
                  <TabsTrigger value="practice">‚úçÔ∏è Exerci»õiu</TabsTrigger>
                </TabsList>

                <TabsContent value="code" className="mt-6">
                  <CodeBlock
                    id="visualizations"
                    title="VizualizƒÉri Avansate - Prediction vs Actual & Residuals"
                    code={`import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy import stats

# Presupunem cƒÉ avem predic»õiile din partea anterioarƒÉ
# y_test, y_test_pred_lr, y_test_pred_ridge, y_test_pred_rf

# ========================================
# FIGURA 1: PREDICTION VS ACTUAL (3 MODELE)
# ========================================

fig, axes = plt.subplots(1, 3, figsize=(18, 5))

models_predictions = [
    ('Linear Regression', y_test_pred_lr, 'blue'),
    ('Ridge Regression', y_test_pred_ridge, 'purple'),
    ('Random Forest', y_test_pred_rf, 'green')
]

for idx, (model_name, predictions, color) in enumerate(models_predictions):
    ax = axes[idx]

    # Scatter plot: actual vs predicted
    ax.scatter(y_test, predictions, alpha=0.5, color=color, edgecolors='black', s=50)

    # Linia perfectƒÉ y=x
    min_val = min(y_test.min(), predictions.min())
    max_val = max(y_test.max(), predictions.max())
    ax.plot([min_val, max_val], [min_val, max_val], 'r--', linewidth=2, label='Perfect Prediction')

    # Labels »ôi titlu
    ax.set_xlabel('Pre»õ Real (‚Ç¨)', fontsize=12)
    ax.set_ylabel('Pre»õ Prezis (‚Ç¨)', fontsize=12)
    ax.set_title(f'{model_name}\\nPrediction vs Actual', fontsize=13, fontweight='bold')

    # CalculeazƒÉ R¬≤ pentru display
    from sklearn.metrics import r2_score
    r2 = r2_score(y_test, predictions)
    ax.text(0.05, 0.95, f'R¬≤ = {r2:.3f}', transform=ax.transAxes,
            fontsize=11, verticalalignment='top',
            bbox=dict(boxstyle='round', facecolor='white', alpha=0.8))

    ax.legend(loc='lower right')
    ax.grid(alpha=0.3)

plt.tight_layout()
plt.savefig('prediction_vs_actual.png', dpi=300, bbox_inches='tight')
print("‚úÖ Grafic salvat: prediction_vs_actual.png")

# ========================================
# FIGURA 2: RESIDUALS ANALYSIS
# ========================================

fig, axes = plt.subplots(2, 3, figsize=(18, 10))

for idx, (model_name, predictions, color) in enumerate(models_predictions):
    # CalculeazƒÉ residuals
    residuals = y_test - predictions

    # Plot 1: Residuals vs Predicted (detecteazƒÉ heterocedasticitate)
    ax1 = axes[0, idx]
    ax1.scatter(predictions, residuals, alpha=0.5, color=color, edgecolors='black', s=50)
    ax1.axhline(y=0, color='red', linestyle='--', linewidth=2)
    ax1.set_xlabel('Pre»õ Prezis (‚Ç¨)', fontsize=11)
    ax1.set_ylabel('Residuals (‚Ç¨)', fontsize=11)
    ax1.set_title(f'{model_name}\\nResiduals vs Predicted', fontsize=12, fontweight='bold')
    ax1.grid(alpha=0.3)

    # Plot 2: Distribution of Residuals (verificƒÉ normalitatea)
    ax2 = axes[1, idx]
    ax2.hist(residuals, bins=30, color=color, alpha=0.7, edgecolor='black')

    # Suprapune curba normalƒÉ
    mu, sigma = residuals.mean(), residuals.std()
    x = np.linspace(residuals.min(), residuals.max(), 100)
    ax2.plot(x, stats.norm.pdf(x, mu, sigma) * len(residuals) * (residuals.max()-residuals.min())/30,
             'r-', linewidth=2, label='Normal Distribution')

    # Linie verticalƒÉ la 0
    ax2.axvline(x=0, color='black', linestyle='--', linewidth=2, alpha=0.7)

    ax2.set_xlabel('Residuals (‚Ç¨)', fontsize=11)
    ax2.set_ylabel('Frecven»õƒÉ', fontsize=11)
    ax2.set_title(f'{model_name}\\nDistribu»õia Residuals', fontsize=12, fontweight='bold')
    ax2.legend()
    ax2.grid(alpha=0.3)

    # AdaugƒÉ statistici
    ax2.text(0.05, 0.95, f'Mean: {mu:,.0f}‚Ç¨\\nStd: {sigma:,.0f}‚Ç¨',
             transform=ax2.transAxes, fontsize=9, verticalalignment='top',
             bbox=dict(boxstyle='round', facecolor='white', alpha=0.8))

plt.tight_layout()
plt.savefig('residuals_analysis.png', dpi=300, bbox_inches='tight')
print("‚úÖ Grafic salvat: residuals_analysis.png")

# ========================================
# FIGURA 3: FEATURE IMPORTANCE (RANDOM FOREST)
# ========================================

# Doar Random Forest are feature_importances_
importances = rf_model.feature_importances_

# CreeazƒÉ DataFrame pentru sortare
feature_importance_df = pd.DataFrame({
    'feature': feature_names,
    'importance': importances
}).sort_values('importance', ascending=False)

# SelecteazƒÉ top 15
top_features = feature_importance_df.head(15)

# Plot
plt.figure(figsize=(12, 8))
colors_gradient = plt.cm.RdYlGn(np.linspace(0.3, 0.9, len(top_features)))
plt.barh(top_features['feature'], top_features['importance'], color=colors_gradient, edgecolor='black')
plt.xlabel('Importance', fontsize=13)
plt.ylabel('Feature', fontsize=13)
plt.title('Top 15 Feature Importance - Random Forest Regressor', fontsize=15, fontweight='bold')
plt.gca().invert_yaxis()
plt.grid(axis='x', alpha=0.3)

# AdaugƒÉ valori pe bare
for i, (idx, row) in enumerate(top_features.iterrows()):
    plt.text(row['importance'] + 0.005, i, f"{row['importance']:.3f}",
             va='center', fontweight='bold', fontsize=9)

plt.tight_layout()
plt.savefig('feature_importance.png', dpi=300, bbox_inches='tight')
print("‚úÖ Grafic salvat: feature_importance.png")

# ========================================
# RAPORT FINAL - DIAGNOSTIC
# ========================================

print("""
\\nüìä INTERPRETAREA VIZUALIZƒÇRILOR:

1. PREDICTION VS ACTUAL:
   ‚úì Puncte aproape de linia ro»ôie = predic»õii bune
   ‚úó Puncte departe de linie = erori mari
   ‚Üí VerificƒÉ: sunt erorile aleatorii sau sistematice?

2. RESIDUALS VS PREDICTED:
   ‚úì Residuals random scatter around 0 = GOOD (homoscedasticity)
   ‚úó Pattern √Æn residuals (funnel shape) = BAD (heteroscedasticity)
   ‚Üí DacƒÉ vezi funnel: modelul gre»ôe»ôte mai mult la pre»õuri mari/mici

3. DISTRIBU»öIA RESIDUALS:
   ‚úì Distribu»õie normalƒÉ centratƒÉ pe 0 = IDEAL
   ‚úó Skewed la st√¢nga/dreapta = Bias sistematic
   ‚úó Heavy tails = Multe outlieri
   ‚Üí Normal distribution = model captureazƒÉ bine pattern-urile

4. FEATURE IMPORTANCE:
   ‚Üí IdentificƒÉ ce features sunt cele mai importante
   ‚Üí Poate elimina features irelevante
   ‚Üí Poate sugera noi features de creat

üéØ AC»öIUNI BAZATE PE GRAFICE:

DacƒÉ vezi:
  ‚Ä¢ Funnel shape √Æn residuals ‚Üí Log transform la target
  ‚Ä¢ Skewed residuals ‚Üí VerificƒÉ outlieri
  ‚Ä¢ Low R¬≤ dar residuals OK ‚Üí AdaugƒÉ mai multe features
  ‚Ä¢ Train R¬≤ >> Test R¬≤ ‚Üí Reduce complexity (regularization)

üèÜ CONCLUZIE:
   Metricile spun "C√ÇT DE BINE".
   VizualizƒÉrile spun "UNDE »ôi DE CE".
   √émpreunƒÉ = COMPLETE MODEL DIAGNOSTIC.
""")`}
                  />
                </TabsContent>

                <TabsContent value="interpret" className="mt-6">
                  <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-orange-600 dark:text-orange-400">
                      üß† Ghid De Interpretare VizualizƒÉri
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-blue-700 dark:text-blue-300">
                          üìç Pattern #1: Perfect Model
                        </h4>
                        <div className="grid md:grid-cols-2 gap-4">
                          <div>
                            <p className="font-semibold mb-2">Prediction vs Actual:</p>
                            <p className="text-sm text-green-600">‚úÖ Toate punctele pe linia y=x</p>
                            <p className="text-sm text-green-600">‚úÖ Spread minim</p>
                            <p className="text-sm text-green-600">‚úÖ R¬≤ aproape de 1</p>
                          </div>
                          <div>
                            <p className="font-semibold mb-2">Residuals:</p>
                            <p className="text-sm text-green-600">‚úÖ Random scatter around 0</p>
                            <p className="text-sm text-green-600">‚úÖ Distribu»õie normalƒÉ</p>
                            <p className="text-sm text-green-600">‚úÖ No pattern visible</p>
                          </div>
                        </div>
                      </div>

                      <div className="bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-yellow-700 dark:text-yellow-300">
                          ‚ö†Ô∏è Pattern #2: Systematic Bias
                        </h4>
                        <div className="grid md:grid-cols-2 gap-4">
                          <div>
                            <p className="font-semibold mb-2">Cum aratƒÉ:</p>
                            <p className="text-sm text-orange-600">‚ö†Ô∏è Toate punctele DEASUPRA liniei y=x</p>
                            <p className="text-sm text-gray-600 dark:text-gray-400 mt-2">
                              <strong>Interpretare:</strong> Modelul SUPRAEVALUEAZƒÇ consistent
                            </p>
                          </div>
                          <div>
                            <p className="font-semibold mb-2">Rezolvare:</p>
                            <p className="text-sm">‚Ä¢ VerificƒÉ feature engineering</p>
                            <p className="text-sm">‚Ä¢ Poate ai nevoie de target transformation</p>
                            <p className="text-sm">‚Ä¢ Sau features importante lipsesc</p>
                          </div>
                        </div>
                      </div>

                      <div className="bg-red-50 dark:bg-red-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-red-700 dark:text-red-300">
                          üö® Pattern #3: Heteroscedasticity (Funnel Shape)
                        </h4>
                        <div className="grid md:grid-cols-2 gap-4">
                          <div>
                            <p className="font-semibold mb-2">Cum aratƒÉ:</p>
                            <p className="text-sm text-red-600">‚ùå Residuals formeazƒÉ "p√¢lnie"</p>
                            <p className="text-sm text-red-600">‚ùå Spread cre»ôte cu valorile prezise</p>
                            <p className="text-sm text-gray-600 dark:text-gray-400 mt-2">
                              <strong>Interpretare:</strong> Variance neuniformƒÉ - erori mai mari la pre»õuri mari
                            </p>
                          </div>
                          <div>
                            <p className="font-semibold mb-2">Rezolvare:</p>
                            <p className="text-sm">‚Ä¢ Log transform la target: log(pret)</p>
                            <p className="text-sm">‚Ä¢ Sau weighted regression</p>
                            <p className="text-sm">‚Ä¢ Sau robust regression models</p>
                          </div>
                        </div>
                      </div>

                      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-purple-700 dark:text-purple-300">
                          üìä Pattern #4: Outlieri Vizibili
                        </h4>
                        <div className="grid md:grid-cols-2 gap-4">
                          <div>
                            <p className="font-semibold mb-2">Cum aratƒÉ:</p>
                            <p className="text-sm text-purple-600">‚ö†Ô∏è C√¢teva puncte FOARTE departe de linie</p>
                            <p className="text-sm text-purple-600">‚ö†Ô∏è Heavy tails √Æn distribu»õia residuals</p>
                          </div>
                          <div>
                            <p className="font-semibold mb-2">Ce faci:</p>
                            <p className="text-sm">‚Ä¢ IdentificƒÉ outlieri: top 5% residuals</p>
                            <p className="text-sm">‚Ä¢ InvestigheazƒÉ: sunt erori sau cazuri reale?</p>
                            <p className="text-sm">‚Ä¢ Decide: elimini sau folose»ôti robust models?</p>
                          </div>
                        </div>
                      </div>

                      <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
                        <h4 className="text-xl font-semibold mb-3 text-green-700 dark:text-green-300">
                          üéØ Exemplu Practic: Interpretare CompletƒÉ
                        </h4>
                        <div className="bg-white dark:bg-gray-900 rounded p-4 text-sm space-y-3">
                          <p><strong>Scenariul:</strong> Vezi cƒÉ Random Forest are:</p>
                          <ul className="ml-4 space-y-1">
                            <li>‚úÖ R¬≤ Test = 0.88 (GOOD)</li>
                            <li>‚ö†Ô∏è Dar punctele √Æn Prediction vs Actual aratƒÉ spread mai mare la pre»õuri &gt; 200.000‚Ç¨</li>
                            <li>‚ö†Ô∏è Residuals formeazƒÉ u»ôoarƒÉ p√¢lnie</li>
                          </ul>

                          <p className="mt-4"><strong>Interpretare:</strong></p>
                          <p className="text-gray-700 dark:text-gray-300">
                            Modelul func»õioneazƒÉ bine √Æn general, DAR are probleme cu apartamentele scumpe (luxury segment).
                            Posibil cƒÉ nu ai suficiente exemple de apartamente &gt;200K √Æn training data.
                          </p>

                          <p className="mt-4"><strong>Ac»õiune:</strong></p>
                          <p className="text-green-700">
                            ‚Üí ColecteazƒÉ mai multe date pentru segmentul luxury<br/>
                            ‚Üí SAU creeazƒÉ model separat pentru apartamente &gt; 200K‚Ç¨<br/>
                            ‚Üí SAU folose»ôte log transform: log(pret)
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </TabsContent>

                <TabsContent value="practice" className="mt-6">
                  <div className="bg-gradient-to-r from-orange-50 to-red-50 dark:from-orange-900/20 dark:to-red-900/20 rounded-lg p-6">
                    <h3 className="text-2xl font-bold mb-4 text-orange-600 dark:text-orange-400">
                      ‚úçÔ∏è Exerci»õiu Practic
                    </h3>

                    <div className="space-y-6">
                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 1: IdentificƒÉ Outlieri</h4>
                        <p className="mb-4">IdentificƒÉ top 10 apartamente cu cele mai mari erori absolute »ôi analizeazƒÉ-le</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p># CalculeazƒÉ erori absolute</p>
                          <p>errors = np.abs(y_test - y_test_pred_rf)</p>
                          <p>error_df = pd.DataFrame({'{'}
                            'actual': y_test, 'predicted': y_test_pred_rf, 'error': errors
                          {'}'})</p>
                          <p>top_errors = error_df.nlargest(10, 'error')</p>
                        </div>
                        <p className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                          <strong>√éntrebare:</strong> Ce au √Æn comun apartamentele cu cele mai mari erori?
                        </p>
                      </div>

                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 2: Log Transformation</h4>
                        <p className="mb-4">√éncearcƒÉ sƒÉ antrenezi modelul cu log(pret) √Æn loc de pret</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p>y_train_log = np.log(y_train)</p>
                          <p>y_test_log = np.log(y_test)</p>
                          <p className="mt-2"># AntreneazƒÉ modelul pe y_train_log</p>
                          <p># Apoi exponen»õiazƒÉ predic»õiile: np.exp(predictions)</p>
                        </div>
                        <p className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                          <strong>Provocare:</strong> ComparƒÉ RMSE √Ænainte »ôi dupƒÉ log transform
                        </p>
                      </div>

                      <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="text-lg font-semibold mb-3">üìù SarcinƒÉ 3: Prediction Intervals</h4>
                        <p className="mb-4">CreeazƒÉ intervale de √Æncredere pentru predic»õii (¬±1 std deviation)</p>
                        <div className="bg-gray-100 dark:bg-gray-900 rounded p-4 text-sm font-mono">
                          <p>residuals_std = np.std(y_test - y_test_pred_rf)</p>
                          <p>lower_bound = y_test_pred_rf - 1.96 * residuals_std</p>
                          <p>upper_bound = y_test_pred_rf + 1.96 * residuals_std</p>
                        </div>
                        <p className="mt-3 text-sm text-gray-600 dark:text-gray-400">
                          <strong>Rezultat:</strong> "Apartament prezis: 125.000‚Ç¨ ¬± 12.000‚Ç¨ (95% confidence)"
                        </p>
                      </div>
                    </div>
                  </div>
                </TabsContent>
              </Tabs>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Session Complete Summary */}
        <Card className="mt-12 p-8 bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 dark:from-green-900/20 dark:via-blue-900/20 dark:to-purple-900/20 border-2 border-green-300 dark:border-green-700">
          <div className="text-center mb-6">
            <h2 className="text-4xl font-bold mb-4 bg-gradient-to-r from-green-600 via-blue-600 to-purple-600 bg-clip-text text-transparent">
              üéâ Session 32 Complete!
            </h2>
            <p className="text-xl text-gray-700 dark:text-gray-300">
              Ai masterizat un proiect COMPLET de Machine Learning Regression!
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-6 mb-8">
            <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
              <h3 className="text-2xl font-bold mb-4 text-blue-600 dark:text-blue-400">
                ‚úÖ Ce Ai √énvƒÉ»õat
              </h3>
              <ul className="space-y-3">
                <li className="flex items-start gap-3">
                  <span className="text-2xl">üìä</span>
                  <div>
                    <strong>Date Realiste:</strong>
                    <p className="text-sm text-gray-600 dark:text-gray-400">Crearea »ôi curƒÉ»õarea datelor messy cu missing values</p>
                  </div>
                </li>
                <li className="flex items-start gap-3">
                  <span className="text-2xl">üîß</span>
                  <div>
                    <strong>ColumnTransformer:</strong>
                    <p className="text-sm text-gray-600 dark:text-gray-400">Preprocessing complex pentru numerical + categorical features</p>
                  </div>
                </li>
                <li className="flex items-start gap-3">
                  <span className="text-2xl">ü§ñ</span>
                  <div>
                    <strong>3 Modele:</strong>
                    <p className="text-sm text-gray-600 dark:text-gray-400">Linear Regression, Ridge (GridSearch), Random Forest</p>
                  </div>
                </li>
                <li className="flex items-start gap-3">
                  <span className="text-2xl">üìà</span>
                  <div>
                    <strong>VizualizƒÉri:</strong>
                    <p className="text-sm text-gray-600 dark:text-gray-400">Prediction vs Actual, Residuals, Feature Importance</p>
                  </div>
                </li>
              </ul>
            </div>

            <div className="bg-white dark:bg-gray-800 rounded-lg p-6">
              <h3 className="text-2xl font-bold mb-4 text-purple-600 dark:text-purple-400">
                üöÄ Skills Unlocked
              </h3>
              <div className="space-y-3">
                <div className="bg-green-100 dark:bg-green-900/30 rounded p-3">
                  <p className="font-semibold text-green-700 dark:text-green-300">‚úì End-to-End ML Project</p>
                  <p className="text-xs text-gray-600 dark:text-gray-400">De la date raw la model deployment-ready</p>
                </div>
                <div className="bg-blue-100 dark:bg-blue-900/30 rounded p-3">
                  <p className="font-semibold text-blue-700 dark:text-blue-300">‚úì Advanced Preprocessing</p>
                  <p className="text-xs text-gray-600 dark:text-gray-400">Pipelines, imputation, encoding, scaling</p>
                </div>
                <div className="bg-purple-100 dark:bg-purple-900/30 rounded p-3">
                  <p className="font-semibold text-purple-700 dark:text-purple-300">‚úì Model Comparison</p>
                  <p className="text-xs text-gray-600 dark:text-gray-400">Systematic evaluation cu multiple metrici</p>
                </div>
                <div className="bg-orange-100 dark:bg-orange-900/30 rounded p-3">
                  <p className="font-semibold text-orange-700 dark:text-orange-300">‚úì Diagnostic Avanzat</p>
                  <p className="text-xs text-gray-600 dark:text-gray-400">Interpretare vizualizƒÉri »ôi debugging ML</p>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-gradient-to-r from-indigo-100 to-purple-100 dark:from-indigo-900/30 dark:to-purple-900/30 rounded-lg p-6 mb-6">
            <h3 className="text-xl font-bold mb-3 text-indigo-700 dark:text-indigo-300">
              üí° Diferen»õa fa»õƒÉ de Sessiunile Anterioare
            </h3>
            <div className="grid md:grid-cols-3 gap-4 text-sm">
              <div className="bg-white dark:bg-gray-800 rounded p-4">
                <p className="font-semibold text-blue-600 mb-2">Session 30:</p>
                <p className="text-gray-600 dark:text-gray-400">Basics - linear regression simplu, date curate, o singurƒÉ metrica</p>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded p-4">
                <p className="font-semibold text-purple-600 mb-2">Session 31:</p>
                <p className="text-gray-600 dark:text-gray-400">Classification avansatƒÉ cu pipelines, cross-validation, multiple modele</p>
              </div>
              <div className="bg-white dark:bg-gray-800 rounded p-4">
                <p className="font-semibold text-green-600 mb-2">Session 32:</p>
                <p className="text-gray-600 dark:text-gray-400">END-TO-END regression project cu date messy, preprocessing complex, complete diagnostic</p>
              </div>
            </div>
          </div>

          <div className="bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-6 border-l-4 border-yellow-500">
            <h3 className="text-xl font-bold mb-3 text-yellow-700 dark:text-yellow-300">
              üéØ UrmƒÉtorii Pa»ôi
            </h3>
            <ol className="space-y-2">
              <li><strong>1. PracticƒÉ cu propriul dataset:</strong> GƒÉse»ôte date de pe Kaggle (house prices, car prices) »ôi aplicƒÉ tot ce ai √ÆnvƒÉ»õat</li>
              <li><strong>2. ExperimenteazƒÉ cu hyperparameters:</strong> √éncearcƒÉ GridSearchCV pe toate cele 3 modele</li>
              <li><strong>3. Feature Engineering:</strong> CreeazƒÉ features noi (v√¢rstƒÉ apartament = 2024 - an_constructie, pre»õ/mp, etc.)</li>
              <li><strong>4. Deploy:</strong> SalveazƒÉ best model cu joblib »ôi creeazƒÉ o aplica»õie simplƒÉ cu Streamlit</li>
              <li><strong>5. Session 33:</strong> Classification pe Iris dataset - consolidare »ôi compara»õie</li>
            </ol>
          </div>

          <div className="text-center mt-8">
            <p className="text-2xl font-bold text-gray-800 dark:text-gray-200 mb-2">
              De la "Ar trebui sƒÉ cumpƒÉr acest apartament?"
            </p>
            <p className="text-xl text-gray-600 dark:text-gray-400 mb-4">
              La "Am un sistem ML care prezice pre»õuri cu 88% acurate»õe!"
            </p>
            <p className="text-3xl">üè† ‚Üí ü§ñ ‚Üí üìä ‚Üí üéâ</p>
          </div>
        </Card>

        {/* Back Navigation */}
        <div className="mt-12 text-center">
          <Button
            onClick={() => window.location.href = '/machine-learning'}
            className="bg-gradient-to-r from-blue-500 to-indigo-500 hover:from-blue-600 hover:to-indigo-600 text-white px-8 py-4 text-lg"
          >
            ‚Üê √énapoi La Machine Learning
          </Button>
        </div>
      </div>
    </div>
  );
};

export default SklearnSession32;